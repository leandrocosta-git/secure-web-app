name: ci-cd

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-1
  ROLE_ARN: arn:aws:iam::017820667577:role/github-actions-deployer
  ARTIFACT_BUCKET: secure-webapp-artifacts-eu-west-1
  APP_DIR: app
  ZIP_NAME: app-${{ github.sha }}.zip

jobs:
  iac-scan:
    name: iac-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write   # needed to upload SARIF
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov (CloudFormation in iac/)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: iac
          framework: cloudformation
          quiet: true
          soft_fail: false           # fail on findings
          output_format: sarif
          output_file_path: checkov.sarif

      - name: Upload SARIF to GitHub code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov.sarif

  build-test-deploy:
    name: build-test-deploy
    runs-on: ubuntu-latest
    needs: [ iac-scan ]         # donâ€™t build/deploy unless Checkov passed
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dev deps
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest

      - name: Lint (flake8)
        run: flake8 $APP_DIR

      - name: Lint (black)
        run: black --check $APP_DIR

      - name: Run tests
        run: pytest -q || (echo "No tests? Add some when ready."; exit 0)

      - name: Package app
        run: |
          mkdir -p dist
          zip -r "dist/${ZIP_NAME}" "$APP_DIR" requirements.txt scripts/ssm_deploy.sh

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload artifact to S3
        run: aws s3 cp "dist/${ZIP_NAME}" "s3://${ARTIFACT_BUCKET}/releases/${ZIP_NAME}"

      - name: Find instance IDs by tag (Project=secure-webapp)
        id: discover
        run: |
          IDS=$(aws ec2 describe-instances \
            --filters "Name=tag:Project,Values=secure-webapp" "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" --output text)
          echo "ids=${IDS}" >> $GITHUB_OUTPUT

      - name: Deploy via SSM
        if: steps.discover.outputs.ids != ''
        run: |
          read -r -a INSTANCES <<< "${{ steps.discover.outputs.ids }}"
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Secure webapp deploy $GITHUB_SHA" \
            --instance-ids "${INSTANCES[@]}" \
            --parameters commands='[
              "mkdir -p /opt/app",
              "aws s3 cp s3://${{ env.ARTIFACT_BUCKET }}/releases/${{ env.ZIP_NAME }} /opt/app/app.zip",
              "unzip -o /opt/app/app.zip -d /opt/app",
              "chmod +x /opt/app/scripts/ssm_deploy.sh",
              "/opt/app/scripts/ssm_deploy.sh ${{ env.ARTIFACT_BUCKET }} releases/${{ env.ZIP_NAME }}"
            ]' \
            --output text
